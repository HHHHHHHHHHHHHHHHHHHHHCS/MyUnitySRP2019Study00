#pragma kernel CSMain

#define THREAD_GROUP_SIZE_X 64
#define THREAD_GROUP_SIZE_Y 1
#define THREAD_GROUP_SIZE_Z 1

cbuffer CB
{
	groupshared uint temp[2 * THREAD_GROUP_SIZE_X];
}

StructuredBuffer<uint> _InstancePredicatesIn;
RWStructuredBuffer<uint> _GroupSumArray;
RWStructuredBuffer<uint> _ScannedInstancePredicates;

[numthreads(THREAD_GROUP_SIZE_X, THREAD_GROUP_SIZE_Y, THREAD_GROUP_SIZE_Z)]
inline void CSMain(
	in uint3 _dispatchThreadID: SV_DispatchThreadID, // DispatchThreadID  = dot(GroupID, numthreads) + GroupThreadId;
	in uint  _groupIndex: SV_GroupIndex, // uint GroupIndex = unique index of a thread inside a group
	in uint3 _groupID: SV_GroupID, // GroupID = index for each dimension inside a ThreadGroupCount
	in uint3 _groupThreadID: SV_GroupThreadID // uint3 GroupThreadId = indices for each dimension inside a group of the current thread
)
{
	int tID = (int)_dispatchThreadID.x;
	int groupTID = (int)_groupThreadID.x;//0~64
	int groupID = (int)_groupID.x;
	
	temp[2 * groupTID] = _InstancePredicatesIn[2 * tID];
	temp[2 * groupTID + 1] = _InstancePredicatesIn[2 * tID + 1];
	
	int offset = 1;
	int d;
	const int NoofElements = 2 * THREAD_GROUP_SIZE_X;//128
	
	//跳阶 累加 一共有多少个可见的
	for (d = NoofElements >> 1; d > 0; d >>= 1)//64 32 16 8 4 2 1     0
	{
		GroupMemoryBarrierWithGroupSync();
		
		if (groupTID < d)
		{
			int ai = offset * (2 * groupTID + 1) - 1;
			int bi = offset * (2 * groupTID + 2) - 1;
			temp[bi] += temp[ai];
		}
		offset *= 2;
	}
	
	// 写入group 这组有多少个可见的    清除最后一个值
	if (groupTID == 0)
	{
		_GroupSumArray[_groupID.x] = temp[NoofElements - 1];
		temp[NoofElements - 1] = 0;
	}
	
	//继续执行扫描 把可见的进行排序
	for (d = 1; d < NoofElements; d *= 2)
	{
		offset >>= 1;
		
		GroupMemoryBarrierWithGroupSync();
		
		if (groupTID < d)
		{
			int ai = offset * (2 * groupTID + 1) - 1;
			int bi = offset * (2 * groupTID + 2) - 1;
			int t = temp[ai];
			temp[ai] = temp[bi];
			temp[bi] += t;
		}
	}
	
	GroupMemoryBarrierWithGroupSync();
	
	_ScannedInstancePredicates[2 * tID] = temp[2 * groupTID]; // store to main memory
	_ScannedInstancePredicates[2 * tID + 1] = temp[2 * groupTID + 1];
}